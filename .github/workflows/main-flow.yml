name: main-flow

on:
  pull_request:
    branches: [ "*" ]

env:
  CARGO_TERM_COLOR: always

jobs:   
  cov-compare:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - id: cmp-changes
        run: |
          export CHANGES=$(cat target/mantra_changes.md)
          echo "changes=$CHANGES" >> "$GITHUB_OUTPUT"
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ steps.cmp-changes.outputs.changes }}'
            })

  # build-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Cache
  #     uses: actions/cache@v4
  #     with:
  #       path: |
  #         ~/.cargo/registry
  #         ~/.cargo/git
  #         target
  #       key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  #   - name: Output rust version for educational purposes
  #     run: rustup --version
  #   - name: Build
  #     run: cargo build --verbose
  #   - name: Run tests
  #     run: cargo test --verbose

  # sync-master:
  #   if: github.ref_name == 'develop' && github.event_name == 'push'
  #   needs: "build-test"
  #   runs-on: ubuntu-latest
  #   permissions:
  #       pull-requests: write
  #   steps:
  #       - uses: actions/checkout@v4
  #       - name: create-pr-on-master
  #         run: |
  #           gh pr create --title="chore: auto-merge from develop" --body="Automated merge from develop." --base=master --head=develop
  #         env:
  #           GH_TOKEN: ${{ secrets.PAT }}

  # auto-merge:
  #   if: github.base_ref == 'master' && github.head_ref == 'develop'
  #   needs: "build-test"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     #   with:
  #     #     ref: 'master'
  #     #     fetch-depth: '0'
  #     #     token: ${{ secrets.GITHUB_TOKEN }}
  #     # - run: |
  #     #     git --version
  #     #     git config user.name "GitHub Actions Bot"
  #     #     git config user.email "<>"
  #     #     git status
  #     #     git merge origin/develop
  #     #     git push
  #     - name: merge-pr-on-master
  #       run: gh pr merge develop --auto --rebase
  #       env:
  #         GH_TOKEN: ${{ secrets.PAT }}
